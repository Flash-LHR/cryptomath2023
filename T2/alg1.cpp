#include <stdio.h>
#include <stdlib.h>

/******
 * The input of Algorithm 1 can be explained as follows:
 * U[0]=x_0, U[1]=x_1, U[2]=x_2, U[3]=x_3, U[4]=x_4, U[5]=x_5, U[6]=x_6, U[7]=x_7;
 * T[0]=0, T[1]=0, T[2]=0, T[3]=0, T[4]=0, T[5]=0.
 * The output of Algorithm 1 can be explained as follows:
 * U[0]=y_9, U[1]=x_1, U[2]=y_13, U[3]=y_12, U[4]=y_8, U[5]=y_7, U[6]=y_2, U[7]=y_14;
 * T[0]=t_33, T[1]=t_44, T[2]=t_37, T[3]=t_41, T[4]=t_26, T[5]=t_39.

******/
void algorithm_1(int U[], int T[])
{
int j=0;
j=1^ U[0];
U[0]=j; //U[0]=y_5

U[3]= U[3]^ U[0]^ U[5];     
j=1^ U[3];
U[3]=j; //U[3]=y_1

U[2]= U[2]^ U[1]^ U[4]^ U[5]^ U[7]  ;   
j=1^ U[2];
U[2]=j; //U[2]=y_16  

U[6]= U[6]^ U[2];   
j=1^ U[6];
U[6]=j;//U[6]=y_15  

   U[5]= U[5]^ U[0]^ U[1]^ U[2]^ U[3]^ U[7]  ;   
j=1^ U[5];
U[5]=j;//U[5]=y_7  

   U[1]=U[1]^ U[3] ;   //U[1]=y_3  

   T[0]=(U[0]& U[3])^ T[0] ;   //T[0]=t_10  
   T[2]=(U[5]& U[1])^ T[2] ;   //T[2]=t_4  
   T[3]=(U[2]& U[6])^ T[3] ;   //T[3]=t_5  
   T[1]=T[1]^ T[0] ;   //T[1]=t_10  
   U[1]=U[3]^ U[1] ;   //U[1]=x_1  

   U[2]=U[2]^ U[0]^ U[3]^ U[5]^ U[7] ;   //U[2]=y_4  
   U[3]= U[3]^ U[1]^ U[2]^ U[4]^ U[7]  ;     
j=1^ U[3];
U[3]=j; //U[3]=y_0

   U[0]=U[0]^ U[2] ;   //U[0]=y_9  
   U[4]= U[4]^ U[1]^ U[2]^ U[7]  ;   
j=1^ U[4];
U[4]=j; //U[4]=y_8  

   U[7]=U[7]^ U[0]^ U[3]^ U[4] ;   //U[7]=y_6  
   U[6]=U[6]^ U[1]^ U[3]^ U[4] ;   //U[6]=y_2  

   T[0]=(U[2]& U[3])^ T[0] ;   //T[0]=t_13  
   T[1]=(U[0]& U[4])^ T[1] ;   //T[1]=t_15  

   T[0]=(U[7]& U[6])^ T[0] ;   //T[0]=t_14  

   T[1]=T[1]^ T[2] ;   //T[1]=t_16  
   T[2]=T[2]^ T[0] ;   //T[2]=t_25  
   T[0]=T[0]^ T[3] ;   //T[0]=t_17  
   T[3]=T[3]^ T[1] ;   //T[3]=t_27  
   T[1]=(U[7]& U[6])^ T[1] ;   //T[1]=t_21  

   U[3]=U[3]^ U[1]^ U[4]^ U[5] ;   //U[3]=y_18  
   T[2]=T[2]^ U[3] ;   //T[2]=t_26  

   U[2]=U[2]^ U[1]^ U[4]^ U[5] ; 
 //U[2]=y_20  
   T[0]=T[0]^ U[2] ;   //T[0]=t_17 ^ y_20  


   U[7]=U[7]^ U[3]^ U[6] ;   //U[7]=y_17  
   T[3]=T[3]^ U[7] ;   //T[3]=t_28  

   U[2]=U[2]^ U[0]^ U[3]^ U[4]^ U[7] ; 
 //U[2]=y_19  
   T[1]=T[1]^ U[2] ;   //T[1]=t_21 ^ y_19  

   U[2]=U[2]^ U[0]^ U[1]^ U[5]^ U[6] ;   //U[2]=y_13  
   U[3]=U[3]^ U[1]^ U[4]^ U[5]^ U[6] ;   //U[3]=y_12  

   U[1]=U[1]^ U[3] ;   //U[1]=y_10  
   U[7]=U[7]^ U[0]^ U[1]^ U[4] ;   //U[7]=y_11  

   T[0]=(U[2]& U[3])^ T[0] ;   //T[0]=t_17 ^ y_20 ^ t_7  
   T[1]=(U[1]& U[7])^ T[1] ;   //T[1]=t_21 ^ y_19 ^ t_8  

   U[1]=U[1]^ U[3] ;   //U[1]=x_1  
   U[7]=U[7]^ U[2] ;   //U[7]=y_14  

   T[0]=(U[1]& U[7])^ T[0] ;   //T[0]=t_20  
   T[1]=(U[1]& U[7])^ T[1] ;   //T[1]=t_24  

   T[4]=T[4]^ T[2] ;   //T[4]=t_26  
   T[5]=(T[1]& T[3])^ T[5] ;   //T[5]=t_30  

   T[1]=T[1]^ T[0] ;   //T[1]=t_29  

   T[3]=T[3]^ T[2] ;   //T[3]=t_34  

   T[0]=T[0]^ T[5] ;   //T[0]=t_35  

   T[5]=T[5]^ T[2] ;   //T[5]=t_31  

   T[2]=(T[0]& T[3])^ T[2] ;   //T[2]=t_37  

   T[3]=T[3]^ T[4] ;   //T[3]=t_28  


   T[0]=(T[1]& T[5])^ T[0] ;   //T[0]=t_35 ^ t_32  

   T[5]=T[5]^ T[4] ;   //T[5]=t_30  

   T[0]=T[0]^ T[5] ;   //T[0]=t_33  

   T[5]=T[5]^ T[4] ;   //T[5]=t_31  

   T[5]=T[5]^ T[2] ;   //T[5]=t_39  

   T[3]=T[3]^ T[2] ;   //T[3]=t_38  

   T[3]=(T[4]& T[5])^ T[3] ;   //T[3]=t_41  

   T[2]=T[2]^ T[5] ;   //T[2]=t_31  

   T[2]=(T[4]& T[5])^ T[2] ;   //T[2]=t_42  

   T[1]=(T[0]& T[2])^ T[1] ;   //T[1]=t_44  

   T[2]=(T[4]& T[5])^ T[2] ;   //T[2]=t_31  

   T[2]=T[2]^ T[5] ;   //T[2]=t_37  
}


void algorithm_2(int U[], int T[], int S[], int Z, int j)
{/*** This part is used to generate the output of S-box, the result is stored in S[] ***/
Z=0;

U[1]=U[1]^ U[3] ^ U[4]^ U[6] ;  //  U[1]=y_3  
Z=(T[2]& U[1])^ Z ;  //  Z=z_17  

   S[3]=S[3]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[2]& U[1])^ Z ;  //  Z=0 
   U[1]=U[1]^ U[3] ^ U[4]^ U[6] ;  //  U[1]=x_1  


   T[2]=T[2]^ T[3] ;  //  T[2]=t_45  
   U[1]=U[1]^ U[3]^ U[4] ;  //  U[1]=y_15  
   Z=(T[2]& U[1])^ Z ;  //  Z=z_16  
   S[0]=S[0]^ Z ; 
   S[1]=S[1]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[4]=S[4]^ Z ; 
   S[6]=S[6]^ Z ; 
   S[7]=S[7]^ Z ; 
   Z=(T[2]& U[1])^ Z ;  //  Z=0 
   U[1]=U[1]^ U[3]^ U[4] ;  //  U[1]=x_1  
   T[2]=T[2]^ T[3] ;  //  T[2]=t_37  


   Z=(T[3]& U[6])^ Z ;  //  Z=z_15  
   S[0]=S[0]^ Z ; 
   S[1]=S[1]^ Z ; 
   S[4]=S[4]^ Z ; 
   S[6]=S[6]^ Z ; 
   Z=(T[3]& U[6])^ Z ;  //  Z=0 


   T[2]=T[2]^ T[0]^ T[1]^ T[3] ;  //  T[2]=t_48  
   U[1]=U[1]^ U[3] ;  //  U[1]=y_10  
   Z=(T[2]& U[1])^ Z ;  //  Z=z_14  
   S[1]=S[1]^ Z ; 
   S[4]=S[4]^ Z ; 
   S[6]=S[6]^ Z ; 

   Z=(T[2]& U[1])^ Z ;  //  Z=0 
   T[2]=T[2]^ T[0]^ T[1]^ T[3] ;  //  T[2]=t_37  
   U[1]=U[1]^ U[3] ;  //  U[1]=x_1 


   T[1]=T[1]^ T[3] ;  //  T[1]=t_47  
   Z=(T[1]& U[3])^ Z ;  //  Z=z_13  

   S[1]=S[1]^ Z ; 
   S[2]=S[2]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[6]=S[6]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[1]& U[3])^ Z ;  //  Z=0 
   T[1]=T[1]^ T[3] ;  //  T[1]=t_44  


   T[0]=T[0]^ T[2] ;  //  T[0]=t_46  
   Z=(T[0]& U[1])^ Z ;  //  Z=z_12  
   S[2]=S[2]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[4]=S[4]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[7]=S[7]^ Z ; 
   Z=(T[0]& U[1])^ Z ;  //  Z=0 
   T[0]=T[0]^ T[2] ;  //  T[0]=t_33  

   U[3]=U[3]^ U[4]^ U[6] ;  //  U[3]=y_1 
   Z=(T[0]& U[3])^ Z ;  //  Z=z_11  

   S[1]=S[1]^ Z ; 
   S[2]=S[2]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[6]=S[6]^ Z ; 
   Z=(T[0]& U[3])^ Z ;  //  Z=0 
   U[3]=U[3]^ U[4]^ U[6] ;  //  U[3]=y_12  


   T[0]=T[0]^ T[1] ;  //  T[0]=t_49  
   Z=(T[0]& U[4])^ Z ;  //  Z=z_10  

   S[0]=S[0]^ Z ; 
   S[1]=S[1]^ Z ; 
   S[2]=S[2]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[6]=S[6]^ Z ; 

   Z=(T[0]& U[4])^ Z ;  //  Z=0 
   T[0]=T[0]^ T[1] ;  //  T[0]=t_33  



   U[3]=U[3]^ U[6] ;  //  U[3]=y_0  
   S[0]=(T[1]& U[3])^ S[0] ;  //  S[0]=S[0]^ z_9 
   U[3]=U[3]^ U[6] ;  //  U[3]=y_12  


   Z=(T[2]& U[5])^ Z ;  //  Z=z_8 


   S[1]=S[1]^ Z ; 
   S[2]=S[2]^ Z ; 
   Z=(T[2]& U[5])^ Z ;  //  Z=0 

   T[2]=T[2]^ T[3] ;  //  T[2]=t_45  
   U[0]=U[0]^ U[2]^ U[7] ;  //  U[0]=y_16  
   Z=(T[2]& U[0])^ Z ;  //  Z=z_7 

   S[2]=S[2]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[2]& U[0])^ Z ;  //  Z=0 
   T[2]=T[2]^ T[3] ;  //  T[2]=t_37  
   U[0]=U[0]^ U[2]^ U[7] ;  //  U[0]=y_9  

   U[0]=U[0]^ U[2]^ U[5]^ U[7] ;  //  U[0]=y_6  
   Z=(T[3]& U[0])^ Z ;  //  Z=z_6 

   S[1]=S[1]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[3]& U[0])^ Z ;  //  Z=0 
   U[0]=U[0]^ U[2]^ U[5]^ U[7] ;  //  U[0]=y_9  

   T[2]=T[2]^ T[0]^ T[1]^ T[3] ;  //  T[2]=t_48  
   U[7]=U[7]^ U[2] ;  //  U[7]=y_11  

   S[1]=(T[2]& U[7])^ S[1] ;  //  S[1]=S[1]^ z_5 

   U[7]=U[7]^ U[2] ;  //  U[7]=y_14  
   T[2]=T[2]^ T[0]^ T[1]^ T[3] ;  //  T[2]=t_37  


   T[1]=T[1]^ T[3] ;  //  T[1]=t_47  
   Z=(T[1]& U[2])^ Z ;  //  Z=z_4 
   S[2]=S[2]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[6]=S[6]^ Z ; 
   S[7]=S[7]^ Z ; 
   Z=(T[1]& U[2])^ Z ;  //  Z=0 
   T[1]=T[1]^ T[3] ;  //  T[1]=t_44  

   T[0]=T[0]^ T[2] ;  //  T[0]=t_46  
   Z=(T[0]& U[7])^ Z ;  //  Z=z_3 


   S[1]=S[1]^ Z ; 
   S[2]=S[2]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[6]=S[6]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[0]& U[7])^ Z ;  //  Z=0 
   T[0]=T[0]^ T[2] ;  //  T[0]=t_33  


   U[7]=U[7]^ U[5] ;  //  U[7]=y_5  
   Z=(T[0]& U[7])^ Z ;  //  Z=z_2 

   S[1]=S[1]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[6]=S[6]^ Z ; 
   S[7]=S[7]^ Z ; 

   Z=(T[0]& U[7])^ Z ;  //  Z=0 
   U[7]=U[7]^ U[5] ;  //  U[7]=y_14  

   T[0]=T[0]^ T[1] ;  //  T[0]=t_49  
   Z=(T[0]& U[0])^ Z ;  //  Z=z_1 

   S[1]=S[1]^ Z ; 
   S[3]=S[3]^ Z ; 
   S[5]=S[5]^ Z ; 
   S[6]=S[6]^ Z ; 

   Z=(T[0]& U[0])^ Z ;  //  Z=0 
   T[0]=T[0]^ T[1] ;  //  T[0]=t_33  

   U[7]=U[7]^ U[0]^ U[5] ;  //  U[7]=y_4  
   Z=(T[1]& U[7])^ Z ;  //  Z=z_0 
   S[5]=S[5]^ Z ; 
   S[7]=S[7]^ Z ; 
   Z=(T[1]& U[7])^ Z ;  //  Z=0 
   U[7]=U[7]^ U[0]^ U[5] ;  //  U[7]=y_14  

j=1^ S[0];
S[0]=j;

j=1^ S[1];
S[1]=j;

j=1^ S[3];
S[3]=j;
 
j=1^ S[6];
S[6]=j;

j=1^ S[7];
S[7]=j;


/*** This part adopts the inverse of algorihtm_1 to regenerate the input of S-box, the result is stored in U[] and T[] ***/
T[2]=T[2]^ T[5] ;     
T[2]=(T[4]& T[5])^ T[2] ;   
T[1]=(T[0]& T[2])^ T[1] ;   
T[2]=(T[4]& T[5])^ T[2] ;   
T[2]=T[2]^ T[5] ;   
T[3]=(T[4]& T[5])^ T[3] ;   
T[3]=T[3]^ T[2] ;   
T[5]=T[5]^ T[2] ;   
T[5]=T[5]^ T[4] ;   
T[0]=T[0]^ T[5] ;   
T[5]=T[5]^ T[4] ;   
T[0]=(T[1]& T[5])^ T[0] ;   
T[3]=T[3]^ T[4] ;   
T[2]=(T[0]& T[3])^ T[2] ;   
T[5]=T[5]^ T[2] ;   
T[0]=T[0]^ T[5] ;   
T[3]=T[3]^ T[2] ;   
T[1]=T[1]^ T[0] ;   
   T[5]=(T[1]& T[3])^ T[5] ;   
T[4]=T[4]^ T[2] ;     
T[1]=(U[1]& U[7])^ T[1] ;   
T[0]=(U[1]& U[7])^ T[0] ;   
U[7]=U[7]^ U[2] ;   
   U[1]=U[1]^ U[3] ;   
T[1]=(U[1]& U[7])^ T[1] ;   
   T[0]=(U[2]& U[3])^ T[0] ;   
   U[7]=U[7]^ U[0]^ U[1]^ U[4] ;   
U[1]=U[1]^ U[3] ;    
U[3]=U[3]^ U[1]^ U[4]^ U[5]^ U[6] ;   
U[2]=U[2]^ U[0]^ U[1]^ U[5]^ U[6] ;  
T[1]=T[1]^ U[2] ;   
U[2]=U[2]^ U[0]^ U[3]^ U[4]^ U[7] ; 
T[3]=T[3]^ U[7] ;   
U[7]=U[7]^ U[3]^ U[6] ;   
   T[0]=T[0]^ U[2] ;   
U[2]=U[2]^ U[1]^ U[4]^ U[5] ;  
T[2]=T[2]^ U[3] ;  
U[3]=U[3]^ U[1]^ U[4]^ U[5] ;   
T[1]=(U[7]& U[6])^ T[1] ;   
T[3]=T[3]^ T[1] ;    
T[0]=T[0]^ T[3] ;   
T[2]=T[2]^ T[0] ;   
T[1]=T[1]^ T[2] ;   
T[0]=(U[7]& U[6])^ T[0] ;   
T[1]=(U[0]& U[4])^ T[1] ;   
T[0]=(U[2]& U[3])^ T[0] ;    
U[6]=U[6]^ U[1]^ U[3]^ U[4] ;   
U[7]=U[7]^ U[0]^ U[3]^ U[4] ;   

j=1^ U[4];
U[4]=j; //U[4]=y_8

U[4]= U[4]^ U[1]^ U[2]^ U[7]  ;  
U[0]=U[0]^ U[2] ;   //U[0]=y_9

j=1^ U[3];
U[3]=j; //U[3]=y_0

U[3]= U[3]^ U[1]^ U[2]^ U[4]^ U[7]  ;
U[2]=U[2]^ U[0]^ U[3]^ U[5]^ U[7] ;  
   U[1]=U[3]^ U[1] ;   
   T[1]=T[1]^ T[0] ;     
T[3]=(U[2]& U[6])^ T[3] ;   
   T[2]=(U[5]& U[1])^ T[2] ;   
T[0]=(U[0]& U[3])^ T[0] ;    
U[1]=U[1]^ U[3] ;     

j=1^ U[5];
U[5]=j;

U[5]= U[5]^ U[0]^ U[1]^ U[2]^ U[3]^ U[7]  ;  
j=1^ U[6];
U[6]=j; 

U[6]= U[6]^ U[2];  

j=1^ U[2];
U[2]=j; 
U[2]= U[2]^ U[1]^ U[4]^ U[5]^ U[7] ;  

j=1^ U[3];
U[3]=j; 

U[3]= U[3]^ U[0]^ U[5];   
j=1^ U[0];
U[0]=j; 


}

int main()
{
    int U[8], T[6], S[8], Z, j, X, ii, input, output;

    for (X = 0; X < 256; ++X)
    {
        for (ii = 0; ii < 6; ++ii)
            T[ii] = 0;
        for (ii = 0; ii < 8; ++ii)
            U[ii] = (X >> (ii)) & 1;
        //algorithm 1
        algorithm_1(U, T);

        //algorithm 5
        for (ii = 0; ii < 8; ++ii)
            S[ii] = 0;
        algorithm_2(U, T, S, Z, j);

        for (input = 0, output = 0, ii = 0; ii < 8; ++ii)
        {
            input = input | (U[ii] << ii);
            output = (output << 1) | S[ii];
        }
        printf("%02X: %02X  ", input, output);
        if (X % 16 == 15)
            printf("\n");
    }
}